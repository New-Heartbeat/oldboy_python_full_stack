"""
函数基本使用
1、什么是函数
  函数就相当于具备某一功能的工具
2、为何要用函数
  自己版本.py.程序的组织结构不清晰、可读性差
  b.可维护性、扩展性差
  c.代码冗余
3、如何用函数
  自己版本.py.先定义：三种形式
  b.后调用：三种形式
  c.返回值：三种形式
  """

# 一、先定义
"""
定义语法：
def 函数名(参数1, 参数2, ...):
    '''文档描述'''
    函数体
    return
"""


# 定义函数发生的事情
# 1、申请内存空间保存函数的代码
# 2、将上述内存地址绑定函数名
# 3、定义函数不会执行函数，但是会检测函数体语法
# 三种定义形式：有参、无参、空函数
def foo():
    return
print(foo())    # None
print(foo)      # 函数在内存空间的地址

# def func1():
#     func2()
#     print('调用func1')
#     return
#
#
# func1()  # 在这里调用func1会报错，此时func2还未被定义
#
#
# def func2():
#     print('调用func2')
#     return
#
#
# func1()  # 在这里调用func1不会报错，因为此时func2已经被定义

# 二、后调用
# 调用函数发生的事情
# 1、通过函数名找到函数的内存地址
# 2、然后加括号就是在触发函数体代码的执行

# 调用函数的三种形式
# 1、语句的形式：只加括号调用函数
# 2、表达式形式
def add(x, y):
    return x+y
res = add(1, 2) + 3
print(res)
# 3、调用函数可以当作参数
res = add(add(1, 2), 3)
print(res)

# 三、函数的返回值
# return是函数结束的标志，函数体代码一旦运行到return会立刻终止函数的运行
# 并且会将return后的值当作本次运行的结果返回
# 1、返回None：函数体内没有return/return/return None
# 2、返回一个值：return 值
# 3、返回多个值：用逗号分隔开多个值，会被return返回成元组
